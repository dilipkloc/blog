<h1> Show </h1>
<% require 'pry'; binding.pry %>
<b> Category: </b>  <%= link_to Category.find_by('id', @article.category_id).name, category_path(@article.category_id) %><br/>
<%= image_tag(@article.feature_image_url.url, style: 'height:250px;max-width 200px;width:100%;') if @article.feature_image_url %><br/>
<b> Title: </b> <%= @article.title %> <br/>
<b> Body: </b> <%= @article.body %><br/>
<b> Publish date: </b> <%= @article.publish_date %><br/>
<b> Is Published: </b> 
  <% if @article.is_published %>
    It is published
  <% else %>
    It is not published
  <% end %><br/>
  <% if user_signed_in? and (can? :manage, @article or current_user.id == @article.user_id) %>
    <%= link_to "edit", article_edit_path(@article.id) %>
    <%= link_to "Delete", @article , method: :delete, data: { confirm: "sure?" } %><br/><br/> <br/>
  <% end %>

<h1> Comments Below </h1>

<% Postcomment.where(:article_id => @article.id).each do |comment| %>
  <b> Title: </b> <%= comment.title %><br/> <b> Body: </b> <%= comment.body %><br/>
  <% if user_signed_in? and (comment.user_id == current_user.id  or @article.user_id == current_user.id or can? :manage, comment or can? :edit, comment)%>
    <%= link_to 'edit', postcomment_edit_path(comment.id)%>
    <%= link_to "Delete", comment , method: :delete, data: { confirm: "sure?" } %><br/>
  <% end %>
  <br/>
<% end %>

<div align=center>

<%= form_for Postcomment.new, :html => {:class => "form", :id => "articleForm"} do |f| %>

  <% if user_signed_in? %>

    <%= f.hidden_field :article_id, value: @article.id %><br/>

    <label> Enter Title </label>
    <%= f.text_field :title %> <span id="titleError"></span>  <br/>

    <label> Your comments </label>
    <%= f.text_area :body %> <span id="bodyError"></span> <br/>

    <%= f.submit "save", id: "articleSubmit" %><br/>

  <% end %>
  </div>

<% end %>

<script>
  var title = document.getElementById('postcomment_title');
  var comment = document.getElementById('postcomment_body');
  var formHandle = document.getElementById('articleForm');
  var submitHandle = document.getElementById('articleSubmit');

  var titleErrorHandle = document.getElementById('titleError');
  var bodyErrorHandle = document.getElementById('bodyError');

  formHandle.addEventListener('submit',function(e){
    if (title.value === "") {
      titleErrorHandle.innerHTML = "Title field cannot be empty";
      e.preventDefault();
    }else{
      titleErrorHandle.innerHTML = "";
    }

    if (comment.value === "") {
      bodyErrorHandle.innerHTML = "Title field cannot be empty";
      e.preventDefault();
    }else{
      bodyErrorHandle.innerHTML = "";
    }
    setTimeout(function(){
        submitHandle.disabled = false;
      },100);

  },true);

</script>